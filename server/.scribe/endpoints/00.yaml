name: 'Authentication Endpoints'
description: |-

  APIs for authenticating user
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: 'Authentication Endpoints'
      groupDescription: |-

        APIs for authenticating user
      subgroup: ''
      subgroupDescription: ''
      title: Login.
      description: 'This endpoint let the user login to the system and return them with a token for authenticate on authenticated endpoints'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: required.
        required: false
        example: duykhangpdk0701@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: required.
        required: false
        example: Pdk@073101
        type: string
        custom: []
    cleanBodyParameters:
      email: duykhangpdk0701@gmail.com
      password: Pdk@073101
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":55,"name":"Hermina Prohaska","email":"lroob@example.org","token":null,"roles":[],"permissions":[],"role":"","avatar":"https:\/\/ui-avatars.com\/api\/?background=random&name=Hermina Prohaska","reset_password_at":null,"profile":null,"multiple_address":[],"address_default":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: 'Authentication Endpoints'
      groupDescription: |-

        APIs for authenticating user
      subgroup: ''
      subgroupDescription: ''
      title: Register.
      description: 'This endpoint let the user register to the account.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: null
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: null
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: null
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: null
        type: string
        custom: []
      agree_ckb:
        name: agree_ckb
        description: 'Agree to the terms.'
        required: true
        example: true
        type: boolean
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: true
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      first_name: null
      last_name: null
      email: null
      password: null
      agree_ckb: true
      password_confirmation: null
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/auth/oauth/{driver}/callback'
    metadata:
      groupName: 'Authentication Endpoints'
      groupDescription: |-

        APIs for authenticating user
      subgroup: ''
      subgroupDescription: ''
      title: 'Login social callback.'
      description: 'This endpoint let the user login to the system by the social media and return them with a token for authenticate on authenticated endpoints'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters:
      driver:
        name: driver
        description: required.
        required: false
        example: facebook
        type: string
        custom: []
    cleanUrlParameters:
      driver: facebook
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: example@gmail.com
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the user.'
        required: true
        example: '12345678'
        type: string
        custom: []
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'NT Mkey'
        type: string
        custom: []
      token:
        name: token
        description: 'The token of the user.'
        required: true
        example: ABCDXYZ...
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the user.'
        required: false
        example: null
        type: url
        custom: []
    cleanBodyParameters:
      email: example@gmail.com
      id: '12345678'
      name: 'NT Mkey'
      token: ABCDXYZ...
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":56,"name":"Kory O''Connell","email":"sbartell@example.org","token":null,"roles":[],"permissions":[],"role":"","avatar":"https:\/\/ui-avatars.com\/api\/?background=random&name=Kory O''Connell","reset_password_at":null,"profile":null,"multiple_address":[],"address_default":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: 'Authentication Endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the user detail'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":57,"name":"Tatyana Smitham","email":"bergstrom.lloyd@example.org","token":null,"roles":[],"permissions":[],"role":"","avatar":"https:\/\/ui-avatars.com\/api\/?background=random&name=Tatyana Smitham","reset_password_at":null,"profile":null,"multiple_address":[],"address_default":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8bkv163VPagacfDeE5dhZ64'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: 'Authentication Endpoints'
      groupDescription: |-

        APIs for authenticating user
      subgroup: ''
      subgroupDescription: ''
      title: Logout.
      description: 'Log the user out of the system and provoke the Bearer Key'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": "true", "data": [], "error": ""}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZd4D5gf3kav6cbP1Eh68Va'
    controller: null
    method: null
    route: null
    custom: []
