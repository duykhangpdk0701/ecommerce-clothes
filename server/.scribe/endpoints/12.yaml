name: 'Admin User'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/user
    metadata:
      groupName: 'Admin User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of user.'
      description: 'This endpoint lets you get a list of brands'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      is_show:
        name: is_show
        description: 'True will return active brands and False will return inactive brands.'
        required: false
        example: true
        type: boolean
        custom: []
      limit:
        name: limit
        description: 'The number of resource that will show and then paginate.'
        required: false
        example: 50
        type: integer
        custom: []
    cleanQueryParameters:
      is_show: true
      limit: 50
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pk86Eb4v6fa1VgDhcZ5e3da'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/user/{id}'
    metadata:
      groupName: 'Admin User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get brand detail.'
      description: 'This endpoint lets you get user detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      is_show:
        name: is_show
        description: 'True will return active brands and False will return inactive brands.'
        required: false
        example: true
        type: boolean
        custom: []
      limit:
        name: limit
        description: 'The number of resource that will show and then paginate.'
        required: false
        example: 50
        type: integer
        custom: []
    cleanQueryParameters:
      is_show: true
      limit: 50
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6EP438ahe16fcbDdgVk5Za'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/user
    metadata:
      groupName: 'Admin User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Brand'
      description: 'This endpoint lets you create a user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must not be greater than 20 characters.'
        required: true
        example: lb
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 20 characters.'
        required: true
        example: za
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: mercedes.cummings@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: incidunt
        type: string
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: 598498.0
        type: number
        custom: []
      city_id:
        name: city_id
        description: ''
        required: true
        example: velit
        type: string
        custom: []
      district_id:
        name: district_id
        description: ''
        required: true
        example: autem
        type: string
        custom: []
      ward_id:
        name: ward_id
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: magni
        type: string
        custom: []
    cleanBodyParameters:
      first_name: lb
      last_name: za
      email: mercedes.cummings@example.com
      password: incidunt
      role: suscipit
      phone: 598498.0
      city_id: velit
      district_id: autem
      ward_id: voluptatem
      address: magni
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kb6Veac4g1vDhfa36dPE58Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/user/{id}'
    metadata:
      groupName: 'Admin User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Brand'
      description: 'This endpoint lets you update user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: rzyntspxixge
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ykshlerin@example.com
        type: string
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: quis
        type: string
        custom: []
    cleanBodyParameters:
      name: rzyntspxixge
      email: ykshlerin@example.com
      role: quis
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P3cfhd1ag5VaEb46Z8ve6Dk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/user/{id}'
    metadata:
      groupName: 'Admin User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User'
      description: 'This endpoint lets you delete users'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 1|n5QJU3KB*****************************'
      Content-Type: application/json
      Accept: application/json
      API-KEY: RANDOM_STUFF
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 38b1g5fd4eVa6vhDck6ZEaP'
    controller: null
    method: null
    route: null
    custom: []
